{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Mac OS X/Unix Shell Scripts for Developers","google":"","name":"Unix-shell-scripts-for-developers","body":"This is a collection of Unix shell scripts for developers.\r\n============================\r\n\r\nThese scripts should work on all Unix distros and Mac OS X. Otherwise, it will be stated on the file if it doesn't.\r\n\r\nSSH-COPY-ID\r\n-----------------------------\r\n\r\nThis is for copying your public key to a remote server. Saves you time typing password over and over again.\r\n\r\nUsage:\r\n\r\n``cd ~/.ssh/ && ssh-copy-id -i id_rsa.pub user@remoteserver``\r\n\r\nBACKUP MYSQL DATABASES \r\n-----------------------------\r\n\r\n1. copy and modify linux/backup_mysqldb.sh\r\n2. ssh to remote server\r\n3. copy contents of file to ~/scripts/backups.sh\r\n4. give proper write permissions to make script executable.\r\n   ``chmod a+x ~/scripts/backups.sh``\r\n5. crontab -e \r\n6. Add this if you want to backup database per hour: \r\n   ``0 0 * * *  ~/scripts/backups.sh ``\r\n\r\nOn the server where you store backups, make sure to create the directories (e.g., mkdir -p ~/backups/database).\r\n\r\nBACKUP POSTGRESQL DATABASES \r\n-----------------------------\r\n\r\n1. copy and modify linux/backup_postgresqldb.sh\r\n2. ssh to remote server\r\n3. copy contents of file to ~/scripts/backups.sh and \r\n        chmod a+x ~/scripts/backups.sh\r\n4. give proper write permissions to make script executable\r\n   ``chmod a+x ~/scripts/backups.sh``\r\n5. update the .pgpass file on your home directory. This is needed to make sure you can backup the database without entering a password.\r\n   hostname:port:database:username:password\r\n6. crontab -e \r\n7. Add this if you want to backup database per hour: \r\n   ``0 0 * * *  ~/scripts/backups.sh  ``\r\n"}